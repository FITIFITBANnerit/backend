name: Deploy to EC2 with Docker

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code (with submodules)
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.GH_PAT }}

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
        with:
          version: latest

      - name: Check current directory and files
        run: |
          echo "Current directory:"
          pwd
          echo "List of files in the directory:"
          ls -alh

      - name: Build Docker image
        run: |
          docker build -t day024/fitifitbannerit:latest -f Dockerfile .

      - name: Debug - check image
        run: docker images

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: |
          docker push day024/fitifitbannerit:latest

      - name: Save Docker image as tar file
        run: |
          docker save day024/fitifitbannerit:latest -o fitifitbannerit.tar

      - name: Copy Docker image tar to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "fitifitbannerit.tar"
          target: "/home/ubuntu/app"

      - name: Load Docker image on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            # Docker 설치 (필요시)
            sudo apt-get update
            sudo apt-get install -y docker.io
            sudo systemctl start docker
            sudo systemctl enable docker

            # Docker 이미지 로드
            docker load -i /home/ubuntu/app/fitifitbannerit.tar

            # 기존 컨테이너 중지 및 삭제
            docker ps -a -q --filter "name=fitifitbannerit" | xargs --no-run-if-empty docker stop | xargs --no-run-if-empty docker rm

            # 새로운 컨테이너 실행
            docker run -d --name fitifitbannerit -p 8080:8080 day024/fitifitbannerit:latest
